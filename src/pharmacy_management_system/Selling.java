/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pharmacy_management_system;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.sql.*;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author HP
 */
public class Selling extends javax.swing.JFrame {

    /**
     * Creates new form Selling
     */
    public Selling() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(Login.class.getResource("/img/Untitled.png")));
        initComponents();
        conn = Connect.connect();
        sellingList();
        showDate();
    }

    Connection conn = null;
    PreparedStatement pstmt= null;
    Statement stmt = null;
    ResultSet rs = null;
    java.util.Date d;
    SimpleDateFormat dd;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        medecLbl = new java.awt.Label();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        medText = new javax.swing.JTextField();
        addToBill = new javax.swing.JButton();
        printBtn = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        clearBtn = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        dateLbl = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        MedicineTable = new javax.swing.JTable();
        Qty = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        billTxt = new javax.swing.JTextArea();
        compLbl = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 153, 0));

        medecLbl.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        medecLbl.setForeground(new java.awt.Color(255, 255, 255));
        medecLbl.setText("MEDICINE");
        medecLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medecLblMouseClicked(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 153, 0));
        jLabel15.setText("BILLING");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 153, 0));
        jLabel17.setText("MEDICINE");

        addToBill.setBackground(new java.awt.Color(51, 255, 0));
        addToBill.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addToBill.setForeground(new java.awt.Color(255, 255, 255));
        addToBill.setText("ADD TO BILL");
        addToBill.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 201, 0), 2));
        addToBill.setBorderPainted(false);
        addToBill.setFocusPainted(false);
        addToBill.setFocusable(false);
        addToBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToBillMouseClicked(evt);
            }
        });
        addToBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToBillActionPerformed(evt);
            }
        });

        printBtn.setBackground(new java.awt.Color(51, 255, 0));
        printBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        printBtn.setForeground(new java.awt.Color(255, 255, 255));
        printBtn.setText("PRINT");
        printBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 201, 0), 2));
        printBtn.setBorderPainted(false);
        printBtn.setFocusPainted(false);
        printBtn.setFocusable(false);
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 153, 0));
        jLabel21.setText("BILL");
        jLabel21.setFocusTraversalPolicyProvider(true);
        jLabel21.setFocusable(false);

        clearBtn.setBackground(new java.awt.Color(51, 255, 0));
        clearBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setText("CLEAR");
        clearBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 201, 0), 2));
        clearBtn.setBorderPainted(false);
        clearBtn.setFocusPainted(false);
        clearBtn.setFocusable(false);
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(153, 0, 0));
        jLabel22.setText("Seller");

        dateLbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        dateLbl.setForeground(new java.awt.Color(153, 0, 0));
        dateLbl.setText("Date");

        MedicineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "MEDNAME", "MEDPRICE", "QUANTITY", "FABDATE", "EXPDATE", "COMPANY"
            }
        ));
        MedicineTable.setFocusable(false);
        MedicineTable.setGridColor(new java.awt.Color(204, 204, 204));
        MedicineTable.setRequestFocusEnabled(false);
        MedicineTable.setRowHeight(26);
        MedicineTable.setSelectionBackground(new java.awt.Color(51, 153, 0));
        MedicineTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        MedicineTable.setShowGrid(true);
        MedicineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedicineTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(MedicineTable);

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 153, 0));
        jLabel18.setText("QTY");

        billTxt.setColumns(20);
        billTxt.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        billTxt.setRows(5);
        jScrollPane1.setViewportView(billTxt);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(medText, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Qty, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel22)
                        .addGap(276, 276, 276)
                        .addComponent(jLabel15)
                        .addGap(294, 294, 294)
                        .addComponent(dateLbl))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(addToBill, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(177, 177, 177)
                                .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(345, 345, 345)
                        .addComponent(printBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel22)
                    .addComponent(dateLbl))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(medText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(Qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addToBill, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(printBtn))
        );

        compLbl.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        compLbl.setForeground(new java.awt.Color(255, 255, 255));
        compLbl.setText("COMPANY");
        compLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                compLblMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(medecLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(compLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(medecLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(compLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void medecLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medecLblMouseClicked
        new Medcine().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_medecLblMouseClicked

    private void addToBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToBillActionPerformed
    }//GEN-LAST:event_addToBillActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed

        try {
            billTxt.print();
        } catch(PrinterException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_printBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        medText.setText("");
        Qty.setText("");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void MedicineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicineTableMouseClicked
        // TODO add your handling code here:D
        DefaultTableModel model = (DefaultTableModel) MedicineTable.getModel();
        int MyIndex = MedicineTable.getSelectedRow();
//        System.out.println(MyIndex);
//        MedId.setText(model.getValueAt(MyIndex, 0).toString());
        medText.setText(model.getValueAt(MyIndex, 1).toString());
        medId = Integer.parseInt(model.getValueAt(MyIndex, 0).toString());
        oldQty = Integer.parseInt(model.getValueAt(MyIndex, 3).toString());
        price = Integer.parseInt(model.getValueAt(MyIndex, 2).toString());
        
        //MedQty.setText(model.getValueAt(MyIndex, 3).toString());
    }//GEN-LAST:event_MedicineTableMouseClicked

    int i = 0, price, medId, total;
    static int oldQty, newQty, insertQty;

    private void addToBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToBillMouseClicked
        addToBill();
//        selling_history();
    }//GEN-LAST:event_addToBillMouseClicked

    private void compLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compLblMouseClicked
        new Company().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_compLblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Selling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Selling().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MedicineTable;
    private javax.swing.JTextField Qty;
    private javax.swing.JButton addToBill;
    private javax.swing.JTextArea billTxt;
    private javax.swing.JButton clearBtn;
    private java.awt.Label compLbl;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField medText;
    private java.awt.Label medecLbl;
    private javax.swing.JButton printBtn;
    // End of variables declaration//GEN-END:variables


    private void sellingList(){
    String sql = "select * from MedicineTbl";
     try{
    pstmt=conn.prepareStatement(sql);
    rs=pstmt.executeQuery();
    MedicineTable.setModel(DbUtils.resultSetToTableModel(rs));
     }catch(SQLException e){
      JOptionPane.showMessageDialog(null,e.getMessage(),"Error",2);
        }
    }
    
    public void showDate(){
        d = new java.util.Date();
        dd = new SimpleDateFormat("dd-MM-yyyy");
        dateLbl.setText(dd.format(d));
    }

    public void addToBill() {
        total = Integer.parseInt(Qty.getText())*price;
        if(medText.getText().isEmpty() || Qty.getText().isEmpty())  {
            JOptionPane.showMessageDialog(this, "Missing Information");
        } else {
            i++;
            update();
            if(insertQty < oldQty) {
                if(i == 1) {
                billTxt.setText(billTxt.getText() + """
                                \t*************************PharmaCenter*************************
                                \t\t  ID   MEDICINE     QTY    PRICE   TOTAL
                                """ +"\t\t  "+ i + "\t" + medText.getText() + "\t     " + Qty.getText() + "\t    " + price + "\t    " + total + "\n");
                } else {
                    billTxt.setText(billTxt.getText() 
                            + "\t\t  "+ i + "\t" + medText.getText() + "\t     " + Qty.getText() + "\t    " + price + "\t     " + total + "\n");
                }
                selling_history(); 
               
            } else {
                billTxt.setText("Error!");
                billTxt.setForeground(Color.red);
            }
        }
        
    }
    
    public void update() {
        insertQty = Integer.parseInt(Qty.getText());
        newQty = oldQty - insertQty;
        if(insertQty < oldQty) {
            if(oldQty > 0) {
                String sql = "update medicinetbl set  MedQty='"+ newQty + "'" + " WHERE MedId='" + medId+ "'";
                try {
                    pstmt = conn.prepareStatement(sql);
                    pstmt.execute();
        //            JOptionPane.showMessageDialog(this, "Bill's Record Successfully Updated!");
                    sellingList();
//                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Medcine.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                  JOptionPane.showMessageDialog(this, "No more! Drug Left");
            }
        } else {
                JOptionPane.showMessageDialog(this, "Quantity Excceds that We have!");
            }
        }

    public void selling_history() {
        try {
            String sql2 = "SELECT aid, agentName FROM agenttbl WHERE aid=?";
            PreparedStatement stmt2;
            stmt2 = conn.prepareStatement(sql2);
            stmt2.setString(1, Login.uid.getText());
            rs = stmt2.executeQuery();
            
            if (rs.next()) {
                String agentName = rs.getString("agentName");
                String sql = "INSERT INTO history_sales (MedName, Qty, Price, Total, SaleByAgent) VALUES (?, ?, ?, ?, ?)";
                pstmt = conn.prepareStatement(sql);
                pstmt.setString(1, medText.getText());
                pstmt.setInt(2, Integer.parseInt(Qty.getText()));
                pstmt.setInt(3, price);
                pstmt.setInt(4, total);
                pstmt.setString(5, agentName);
                int rowsInserted = pstmt.executeUpdate();
                if (rowsInserted > 0) {
                    System.out.println("A new sale was recorded successfully for agent " + agentName);
                }
                pstmt.close();
            } else {
                System.out.println("No agent found with aid=" + Login.uid.getText());
            }
            rs.close();
            stmt2.close();
        } catch (SQLException e) {
            System.err.println("Error while recording sale: " + e.getMessage());
            e.printStackTrace();
        }

    }

}
